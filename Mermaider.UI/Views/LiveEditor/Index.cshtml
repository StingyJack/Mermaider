@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<script src="@Url.Content("~/js/mermaid.js")"></script>
<div class="container-fluid">
    <div class="leftColumn">
        <div>
            <img class="headerIcon" src="@Url.Content("~/images/mermaid-small.png")" alt="Mermaider" />
            <h2>Mermaidier</h2>
        </div>
        <div>
            <p class="">Enter your flowchart here...</p>
        </div>
        <div>
            <textarea id="mermaidDataEntryField" class="mermaidDataEntryField" rows="20">

        </textarea>
        </div>
        <div class="btn-toolbar">
            <input type="button" id="btnStartOver" value="Start Over" class="btn btn-danger" />
            <input type="button" id="btnRenderImage" value="Render Image" class="btn btn-success" />
            <input type="button" id="btnRefreshPreview" value="Refresh Preview" class="btn btn-primary" />
        </div>
        <details id="diagnosticsContainer" style="display: none">
            <summary>Diagnostic Information</summary>
            <textarea id="diagnosticsInfo" class="mermaidDiagnostics" rows="20">


                </textarea>
        </details>
    </div>
    <div class=" rightColumn">
        <div class="alignRight hardRight hardTop">
            <a href="http://knsv.github.io/mermaid/#flowcharts-basic-syntax5">Need help? Flowchart Syntax here</a>
        </div>
        <div id="errorsContainer" style="display: none;">
            <textarea id="errorsList" class="parseErrors" rows="10" cols="80"></textarea>
        </div>
        <div id="mermaidPreview" class="mermaid">
            @*Svg preview goes here*@
        </div>
        <div id="mermaidImageLinkContainer" class="btn-toolbar" style="display: none">
            @*Link to open in new window goes here*@
        </div>
        <div id="mermaidRenderedImageContainer" style="display: none">
            @*viewable image goes here*@)
        </div>
    </div>
</div>
<script>

    //$(document).ready(function() {
    //    App.startup();
    //});
    //app.startup();

    $('#btnStartOver').click(function() {
        return location.reload();
    });

    $('#btnRenderImage').click(function() {
        return renderAsImage();
    });

    $('#btnRefreshPreview').click(function() {
        return attemptSvgRendering();
    });

    var config = {
        startOnLoad: false
    };
    mermaid.initialize(config);

    mermaid.parseError = function (err, hash) {
        if (err === 0) {
            $('#errorsContainer').hide();
        }
        else {
            $('#errorsContainer').show();
            $('#errorsList').val(err + hash);

            $('#mermaidPreview').hide();
            $('#mermaidImageLinkContainer').hide();
            $('#mermaidRenderedImageContainer').hide();
        }
    };

    function attemptSvgRendering() {

        const graphText = $('#mermaidDataEntryField').val();
        const parseable = mermaidAPI.parse(graphText);
        if (parseable) {

            const needsUniqueId = `render${(Math.floor(Math.random() * 10000)).toString()}`;
//should be 10K attempts before repeat

            mermaid.mermaidAPI.render(needsUniqueId, graphText, mermaidApiRenderCallback);

        } else {
            //$('#diagnosticsContainer').show();
            $('#errorsContainer').show();
        }
    }

    function mermaidApiRenderCallback(graph) {
        //$('#errorsContainer').hide();

        $('#mermaidPreview').show();
        $('#mermaidImageLinkContainer').hide();
        $('#mermaidRenderedImageContainer').hide();
        $('#mermaidPreview').html(graph);
        $('#diagnosticsContainer').show();
        //mermaidAPI logs to the console.log. Try to redirect it if possible, or just add another property with the string[]
        $('#diagnosticsInfo').val(mermaidAPI.parseError);
    }

    function renderAsImage() {

        const graphText = $('#mermaidDataEntryField').val();

        $.ajax({
            url: '@Url.Action("RenderAsPng", "LiveEditor")',
            type: 'GET',
            dataType: 'json',
            cache: false,
            data: { graphText: graphText },
            success: function(renderResult) {

                if (renderResult.isSuccessful) {
                    const imagePath = renderResult.localUrlImagePath;
                    const link = `<a href="${imagePath}" class="btn-link" target="_blank">Open in new window</a>`;
                    const imageLink = `<img src="${imagePath
                        }" class="mermaidRenderedImageContainerImage" alt="ShouldBeImage" />`;

                    $('#mermaidPreview').hide();
                    $('#mermaidImageLinkContainer').show();
                    $('#mermaidRenderedImageContainer').show();

                    $('#mermaidImageLinkContainer').html(link);
                    $('#mermaidRenderedImageContainer').html(imageLink);
                    reportDiagnostics(renderResult);
                } else {
                    $('#mermaidPreview').hide();
                    $('#mermaidImageLinkContainer').hide();
                    $('#mermaidRenderedImageContainer').hide();
                    reportDiagnostics(renderResult);
                    reportErrors(renderResult);
                }

            }
        });
    }

    function reportDiagnostics(renderResult) {
        $('#diagnosticsContainer').show();
        $('#diagnosticsInfo').val(renderResult.diagnostics.join('\n'));
    }

    function reportErrors(renderResult) {
        if (errors === undefined) {
            $('#errorsContainer').hide();
            $('#errorsList').val('');
        } else {
            $('#errorsContainer').show();
            $('#errorsList').val(renderResult.errors.join('\n'));
        }

    }


</script>